{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,GADeF,SAASC,cAAc,mBACpBD,SAASC,cAAc,mBACzCE,EAAYH,SAASC,cAAc,iBACnCG,EAAmBJ,SAASC,cAAc,mBA+BhD,SAASI,EAAcC,EAAUC,GAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATwB,IAAIC,SAAQ,CAACC,EAASC,KAC3CC,YAAW,KACJN,EACDI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAK,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAtCfR,EAAKgB,iBAAiB,UAAUC,IAC7BA,EAAMC,iBAIT,SAAiBC,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAiBgB,MAAOD,GAAK,EAC9CL,YAAW,KACRT,EAAcc,EAAGhB,EAAUiB,MAAQD,GAC/BE,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MAChBe,QAAQC,IACL,uBAAqBjB,QAAiBkB,OAAEjB,GAAaiB,OAAGN,QAE3DO,EAAA5B,GAAS6B,OAAOd,QACb,uBAAqBN,QAAiBkB,OAAEjB,GAAaiB,OAAGN,OAAoB,IAGjFS,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MACjBe,QAAQC,IACL,sBAAoBjB,QAAiBkB,OAAEjB,GAAaiB,OAAGN,QAE1DO,EAAA5B,GAAS6B,OAAOE,QACb,sBAAoBtB,QAAekB,OAAEjB,GAAaiB,OAAGN,OAAoB,GAE7E,GACLA,E,CAvBNW,CAAQ3B,EAAgBkB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitButton = document.querySelector('[type=\"submit\"]');\nconst firstDelayValue = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountOfPromises = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', event => {\n   event.preventDefault();\n   onClick(firstDelayValue.value);\n});\n\nfunction onClick(userDelay) {\n   for (let i = 0; i < amountOfPromises.value; i += 1) {\n      setTimeout(() => {\n         createPromise(i, delayStep.value * i)\n            .then(({ position, delay }) => {\n               console.log(\n                  `✅ Fulfilled promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n               Notiflix.Notify.success(\n                  `✅ Fulfilled promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n            })\n            .catch(({ position, delay }) => {\n               console.log(\n                  `❌ Rejected promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n               Notiflix.Notify.failure(\n                  `❌ Rejected promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n            });\n      }, userDelay);\n   }\n}\n\nfunction createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.3;\n   const generatePromise = new Promise((success, fail) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            success({ position, delay });\n         } else {\n            fail({ position, delay });\n         }\n      }, delay);\n   });\n   return generatePromise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelayValue","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountOfPromises","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","success","fail","setTimeout","addEventListener","event","preventDefault","userDelay","i","value","then","console","log","Number","$parcel$interopDefault","Notify","catch","failure","$47d4ff9957288465$var$onClick"],"version":3,"file":"03-promises.f1aa47fd.js.map"}