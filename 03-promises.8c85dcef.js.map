{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAE9BC,GADeF,SAASC,cAAc,mBACpBD,SAASC,cAAc,mBACzCE,EAAYH,SAASC,cAAc,iBACnCG,EAAmBJ,SAASC,cAAc,mBAEhDF,EAAKM,iBAAiB,UAAU,SAAAC,GAC7BA,EAAMC,iBAIT,SAAiBC,GACd,I,kBACGC,YAAW,WAsBjB,IAAuBC,EAAUC,EACxBC,GADcF,EArBAG,EAqBUF,EArBPR,EAAUW,MAAQD,EAsBnCD,EAAgBG,KAAKC,SAAW,GACd,IAAIC,SAAQ,SAACC,EAASC,GAC3CV,YAAW,WACJG,EACDM,EAAQ,CAAER,WAAUC,UAEpBQ,EAAK,CAAET,WAAUC,S,GAEpBA,E,KA7BIS,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAChBW,QAAQC,IACL,uBAAwCC,OAAfd,EAAS,QAAwCc,OAAlCC,OAAOd,GAASc,OAAOjB,GAAW,OAE7EkB,EAAA7B,GAAS8B,OAAOT,QACb,uBAAwCM,OAAfd,EAAS,QAAwCc,OAAlCC,OAAOd,GAASc,OAAOjB,GAAW,M,IAG/EoB,OAAM,SAAAP,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,QAAQC,IACL,sBAAuCC,OAAfd,EAAS,QAAwCc,OAAlCC,OAAOd,GAASc,OAAOjB,GAAW,OAE5EkB,EAAA7B,GAAS8B,OAAOE,QACb,sBAAqCL,OAAfd,EAAS,QAAwCc,OAAlCC,OAAOd,GAASc,OAAOjB,GAAW,M,MAGhFA,E,EAnBGsB,EAAI,EAAGA,EAAI1B,EAAiBU,MAAOgB,GAAK,EAACC,EAAAD,E,CAJlDE,CAAQ9B,EAAgBY,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitButton = document.querySelector('[type=\"submit\"]');\nconst firstDelayValue = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountOfPromises = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', event => {\n   event.preventDefault();\n   onClick(firstDelayValue.value);\n});\n\nfunction onClick(userDelay) {\n   for (let i = 0; i < amountOfPromises.value; i += 1) {\n      setTimeout(() => {\n         createPromise(i, delayStep.value * i)\n            .then(({ position, delay }) => {\n               console.log(\n                  `✅ Fulfilled promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n               Notiflix.Notify.success(\n                  `✅ Fulfilled promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n            })\n            .catch(({ position, delay }) => {\n               console.log(\n                  `❌ Rejected promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n               Notiflix.Notify.failure(\n                  `❌ Rejected promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n               );\n            });\n      }, userDelay);\n   }\n}\n\nfunction createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.3;\n   const generatePromise = new Promise((success, fail) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            success({ position, delay });\n         } else {\n            fail({ position, delay });\n         }\n      }, delay);\n   });\n   return generatePromise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelayValue","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountOfPromises","addEventListener","event","preventDefault","userDelay","setTimeout","position","delay","shouldResolve","i","value","Math","random","Promise","success","fail","then","param","console","log","concat","Number","$parcel$interopDefault","Notify","catch","failure","i1","_loop","$ce04d3a99e08e73b$var$onClick"],"version":3,"file":"03-promises.8c85dcef.js.map"}