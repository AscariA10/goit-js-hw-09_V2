{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAE9BC,GADeF,SAASC,cAAc,mBACpBD,SAASC,cAAc,mBACzCE,EAAYH,SAASC,cAAc,iBACnCG,EAAmBJ,SAASC,cAAc,mBA8BhD,SAASI,EAAcC,EAAUC,GAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATwB,IAAIC,SAAQ,CAACC,EAASC,KAC3CC,YAAW,KACJN,EACDI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAK,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CArCfR,EAAKgB,iBAAiB,UAAUC,IAC7BA,EAAMC,iBAIT,SAAiBC,GACd,IAAIC,EAAQC,OAAOlB,EAAgBmB,OACnC,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAiBiB,MAAOC,GAAK,EAC9CjB,EAAciB,EAAIH,EAAQC,OAAOjB,EAAUkB,OAASC,GAChDC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MAChBiB,QAAQC,IACL,uBAAqBnB,QAAiBc,OAAEb,GAAaa,OAAGF,QAE3DQ,EAAA7B,GAAS8B,OAAOf,QACb,uBAAqBN,QAAiBc,OAAEb,GAAaa,OAAGF,OAAoB,IAGjFU,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MACjBiB,QAAQC,IACL,sBAAoBnB,QAAiBc,OAAEb,GAAaa,OAAGF,QAE1DQ,EAAA7B,GAAS8B,OAAOE,QACb,sBAAoBvB,QAAec,OAAEb,GAAaa,OAAGF,OAAoB,G,CApBrFY,CAAQ5B,EAAgBmB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitButton = document.querySelector('[type=\"submit\"]');\nconst firstDelayValue = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountOfPromises = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', event => {\n   event.preventDefault();\n   onClick(firstDelayValue.value);\n});\n\nfunction onClick(userDelay) {\n   let delay = Number(firstDelayValue.value);\n   for (let i = 0; i < amountOfPromises.value; i += 1) {\n      createPromise(i, (delay = Number(delayStep.value) * i))\n         .then(({ position, delay }) => {\n            console.log(\n               `✅ Fulfilled promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n            );\n            Notiflix.Notify.success(\n               `✅ Fulfilled promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n            );\n         })\n         .catch(({ position, delay }) => {\n            console.log(\n               `❌ Rejected promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n            );\n            Notiflix.Notify.failure(\n               `❌ Rejected promise ${position} in ${Number(delay) + Number(userDelay)}ms`\n            );\n         });\n   }\n}\n\nfunction createPromise(position, delay) {\n   const shouldResolve = Math.random() > 0.3;\n   const generatePromise = new Promise((success, fail) => {\n      setTimeout(() => {\n         if (shouldResolve) {\n            success({ position, delay });\n         } else {\n            fail({ position, delay });\n         }\n      }, delay);\n   });\n   return generatePromise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelayValue","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountOfPromises","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","success","fail","setTimeout","addEventListener","event","preventDefault","userDelay","delay1","Number","value","i","then","console","log","$parcel$interopDefault","Notify","catch","failure","$47d4ff9957288465$var$onClick"],"version":3,"file":"03-promises.9766a37d.js.map"}